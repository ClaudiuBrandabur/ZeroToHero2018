CREATE TABLE LOCATIONS (
  LOCATION_ID    NUMBER PRIMARY KEY,
  STREET_ADDRESS VARCHAR2(40),
  POSTAL_CODE    VARCHAR2(12),
  CITY           VARCHAR2(30) NOT NULL,
  STATE_PROVINCE VARCHAR2(25)
);


CREATE TABLE DEPARTMENTS (
  DEPARTMENT_ID   NUMBER PRIMARY KEY,
  DEPARTMENT_NAME VARCHAR2(30),
  LOCATION_ID     NUMBER
);

CREATE TABLE JOBS (
  JOB_ID     VARCHAR2(35) PRIMARY KEY,
  JOB_TITLE  VARCHAR2(35) NOT NULL,
  MIN_SALARY NUMBER(6),
  MAX_SALARY NUMBER(6)
);

CREATE TABLE EMPLOYEES (
  EMPLOYEE_ID    NUMBER PRIMARY KEY,
  FIRST_NAME     VARCHAR2(20),
  LAST_NAME      VARCHAR2(25) NOT NULL,
  EMAIL          VARCHAR2(25) NOT NULL,
  PHONE_NUMBER   VARCHAR2(20),
  HIRE_DATE      DATE         NOT NULL,
  JOB_ID         NUMBER       NOT NULL,
  SALARY         NUMBER(8, 2),
  COMMISSION_PCT NUMBER(2, 2),
  MANAGER_ID     NUMBER,
  DEPARTMENT_ID  NUMBER
);

CREATE SEQUENCE TAB_DEPARTMENTS_SEQ
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE TAB_EMPLOYEES_SEQ
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE TAB_JOBS_SEQ
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE ZTH_SEQ
  START WITH 406
  INCREMENT BY 1;


ALTER TABLE EMPLOYEES
  ADD CONSTRAINT FK_EMPLOYEES_DEPARTEMNTS FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID);
ALTER TABLE EMPLOYEES
  ADD CONSTRAINT FK_EMPLOYEES_JOBS FOREIGN KEY (JOB_ID) REFERENCES JOBS (JOB_ID);
ALTER TABLE EMPLOYEES
  ADD CONSTRAINT FK_EMPLOYEES_EMPL_MANAGER FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID);

insert into departments values
  (TAB_DEPARTMENTS_SEQ.nextval,
   'Administration',
   1700
  );

insert into jobs values
  (TAB_JOBS_SEQ.nextval
    , 'President'
    , 20000
    , 40000
  );

INSERT INTO employees
VALUES (TAB_EMPLOYEES_SEQ.nextval,
        'Steven',
        'King',
        'SKING',
        '515.123.4567',
        sysdate,
        'AD_PRES', --value from second insert
        24000,
        NULL,
        NULL,
        90); --value from first insert

ROLLBACK;

DELETE FROM DEPARTMENTS;
DELETE FROM LOCATIONS;
DELETE FROM JOBS;
DELETE FROM EMPLOYEES;

COMMIT;

SELECT
  FIRST_NAME,
  LAST_NAME
FROM EMPLOYEES;
SELECT *
FROM JOBS;
SELECT *
FROM DEPARTMENTS;
SELECT *
FROM EMPLOYEES EMP
WHERE (EMP.DEPARTMENT_ID = 50);

UPDATE EMPLOYEES
SET SALARY = SALARY + TO_BINARY_DOUBLE((SALARY * 30) / 100)
WHERE DEPARTMENT_ID = 50;

DELETE FROM EMPLOYEES
WHERE EMPLOYEE_ID = 101;

SELECT *
FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG'
ORDER BY FIRST_NAME ASC;

SELECT COUNT(EMPLOYEE_ID)
FROM EMPLOYEES EMP
WHERE (EMP.JOB_ID = 'IT_PROG');

SELECT
  EMP.*,
  DEP.DEPARTMENT_NAME
FROM EMPLOYEES EMP
  INNER JOIN DEPARTMENTS DEP ON (DEP.DEPARTMENT_ID = EMP.DEPARTMENT_ID)
WHERE (EMP.DEPARTMENT_ID = 50);

SELECT
  EMP.*,
  DEP.DEPARTMENT_NAME
FROM EMPLOYEES EMP
  INNER JOIN DEPARTMENTS DEP ON (DEP.DEPARTMENT_ID = EMP.DEPARTMENT_ID)
WHERE (DEP.LOCATION_ID = 1700);

CREATE VIEW EMPL_DEPS AS
  SELECT
    EMP.EMPLOYEE_ID,
    EMP.FIRST_NAME,
    DEP.DEPARTMENT_NAME
  FROM EMPLOYEES EMP
    INNER JOIN DEPARTMENTS DEP ON (DEP.DEPARTMENT_ID = EMP.DEPARTMENT_ID);

SELECT SYSDATE
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'DD-MM-YYYY')
FROM DUAL;

SELECT TO_DATE('25-11-2014', 'DD-MM-YYYY')
FROM DUAL;

SELECT *
FROM EMPLOYEES EMP
WHERE (LOWER(EMP.EMAIL) = EMP.EMAIL) AND (UPPER(EMP.FIRST_NAME) = EMP.FIRST_NAME);

SELECT 'First name: ' || FIRST_NAME "varchar"
FROM EMPLOYEES;

SELECT COUNT(EMPLOYEE_ID)
FROM EMPLOYEES;

SELECT COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG';

SELECT COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

SELECT AVG(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50;

SELECT MIN(SALARY)
FROM EMPLOYEES EMP
  INNER JOIN DEPARTMENTS DEP ON (DEP.DEPARTMENT_ID = EMP.DEPARTMENT_ID)
WHERE DEP.LOCATION_ID = 1700;

SELECT MAX(SALARY)
FROM EMPLOYEES EMP
  INNER JOIN DEPARTMENTS DEP ON (DEP.DEPARTMENT_ID = EMP.DEPARTMENT_ID)
WHERE DEP.LOCATION_ID = 1700;

